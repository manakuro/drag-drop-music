{
  "name": "fwd-stream",
  "description": "Forward a readable stream to another readable stream or a writable stream to another writable stream",
  "version": "1.0.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/fwd-stream"
  },
  "dependencies": {
    "readable-stream": "~1.0.26-4"
  },
  "devDependencies": {
    "tape": "~2.12.3"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "readme": "# fwd-stream\n\nForward a readable stream to another readable stream or a writable stream to another writable stream.\nFeaturing streams2 support and async instantiating.\n\n\tnpm install fwd-stream\n\n[![build status](https://secure.travis-ci.org/mafintosh/fwd-stream.png)](http://travis-ci.org/mafintosh/fwd-stream)\n\n## When should I use this?\n\nThis module makes it easy to return a stream synchroniously that wraps another stream from an async context.\nSay for example you wanted to create a folder before writing a write you could do\n\n``` js\nvar fs = require('fs');\nvar fwd = require('fwd-stream');\n\nvar ws = fwd.writable(function(cb) {\n\tfs.mkdir('my-folder', function() {\n\t\tcb(null, fs.createWriteStream('my-folder/my-file.txt'));\n\t});\n});\n\nws.write('content of my-file.txt');\n```\n\n## Usage\n\nForward readable streams\n\n``` js\nvar fwd = require('fwd-stream');\n\n// rs will be a stream that forwards someReadableStream's data and events\n// backpressure etc will still be respected\n\nvar rs = fwd.readable(someReadableStream);\n\n// or using async instantiating\n\nvar rs = fwd.readable(function(cb) {\n\tsetTimeout(function() {\n\t\tcb(null, someReadableStream);\n\t}, 1000);\n});\n\n// or using objectMode\n\nvar rs = fwd.readable({objectMode:true}, someReadableObjectStream);\n```\n\nForward writable streams\n\n``` js\nvar ws = fwd.writable(someWritableStream);\n\n// or using async instantiating\n\nvar ws = fwd.writable(function(cb) {\n\tsetTimeout(function() {\n\t\tcb(null, ws);\n\t}, 1000);\n});\n\n// or using objectMode\n\nvar ws = fwd.writable({objectMode:true}, someWritableObjectStream);\n```\n\nForward duplex streams\n\n``` js\nvar dupl = fwd.duplex(someWritableStream, someReadableStream);\n\n// or using async instantiating\n\nvar dupl = fwd.duplex(\n\tfunction(cb) {\n\t\tsetTimeout(function() {\n\t\t\tcb(null, someWritableStream);\n\t\t}, 1000);\n\t},\n\tfunction(cb) {\n\t\tsetTimeout(function() {\n\t\t\tcb(null, someReadableStream);\n\t\t}, 1000);\n\t}\n);\n\n// or using objectMode\n\nvar dupl = fwd.duplex({objectMode:true}, someReadableObjStream, someWritableObjStream);\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mafintosh/fwd-stream/issues"
  },
  "homepage": "https://github.com/mafintosh/fwd-stream",
  "_id": "fwd-stream@1.0.4",
  "dist": {
    "shasum": "ed281cabed46feecf921ee32dc4c50b372ac7cfa"
  },
  "_from": "fwd-stream@^1.0.4",
  "_resolved": "https://registry.npmjs.org/fwd-stream/-/fwd-stream-1.0.4.tgz"
}
